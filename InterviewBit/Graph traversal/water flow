int Solution::solve(vector<vector<int> > &A) {
    int n = A.size(), m = A[0].size();
    vector<vector<int>> vis(n, vector<int>(m,0));
    int dx[4] = {-1,0,1,0};
    int dy[4] = {0,1,0,-1};
    int ans = 0;

    function<bool(int,int, int)> isvalid = [&](int i, int j, int c){
        return !(i < 0 || i >= n || j < 0 || j >= m || vis[i][j] >= c);
    };

    function<void(int,int,int)> dfs = [&](int i,int j, int c){
        vis[i][j] += c;
        ans += (vis[i][j] == 3);

        for(int k = 0; k <4; k++){
            int I = i + dx[k], J = j + dy[k];
            if(isvalid(I, J,c) && A[i][j] <= A[I][J]){
                dfs(I,J,c);
            }
        }
    };



    for(int i= 0; i < n; i++){
        if(isvalid(i, 0, 1))
        dfs(i, 0, 1);
    }
    for(int j = 0; j < m; j++){
        if(isvalid(0,j,1))
        dfs(0,j,1);
    }
    for(int i= 0; i < n; i++){
        if(isvalid(i, m-1, 2))
        dfs(i, m-1, 2);
    }
    for(int j = 0; j < m; j++){
        if(isvalid(n-1,j,2))
        dfs(n-1,j,2);
    }
    return ans;
}
