
bool dfs(int i , vector<int>& vis,vector<int>& st, vector<int> adj[]){
    vis[i] = 1;
    st[i] = 1;
    for(auto x: adj[i]){
        if(!vis[x]){
            if(dfs(x, vis, st, adj)) return true;
        }
        else if(st[x]) return true;
    }
    st[i] =0;
    return false;

}
int Solution::solve(int A, vector<vector<int> > &B) {
    vector<int> adj[A+1];
    vector<int> vis(A+1, 0);
    vector<int> st(A+1, 0);

    for(auto x: B){
        adj[x[0]].push_back(x[1]);
    }
    for(int i = 1; i<= A; i++){
        if(!vis[i]){
            if(dfs(i , vis, st , adj)) return 1;
        }
    }
    return 0;
}
