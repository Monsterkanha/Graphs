// We will the one with higher power or its representative will win the game. 

#include<bits/stdc++.h>
using namespace std;

#define lli long long int
#define pb push_back
int parent[100001];
int find(int a)
{
    if(parent[a] < 0) return a;
    
    return parent[a] = find(parent[a]);
}

void Union(int a , int b)
{
    parent[a] = min(parent[a] , parent[b]);
    parent[b] = a;
}

int main()
{
    int n , m , q , a , b , x , y;
    cin>>n>>m;
    
    for(int i=1;i<=n;i++)
        parent[i] = -i;
    
    for(int i=1;i<=m;i++){
        cin>>a>>b;
        a = find(a);
        b = find(b);
        if(a != b) Union(a , b);
    }
    
    cin>>q;
    while(q--)
    {
        cin>>a>>b;
        x = a, y = b;
        a = find(a) , b = find(b);
        if(a == b)
        cout<<"TIE\n";
        
        else
        {
            if(parent[a] < parent[b]) // since we are dealing in negative so condition are reversed.
            cout<<x<<endl;
            else
            cout<<y<<endl;
        }
    }
}
